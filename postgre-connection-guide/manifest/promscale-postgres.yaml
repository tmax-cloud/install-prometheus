apiVersion: v1
kind: Service
metadata:
  name: promscale
  namespace: monitoring
  labels:
    app: promscale
spec:
  type: NodePort
  ports:
    - name: http-promscale
      port: 9201
      targetPort: 9201
    - name: http-postgre
      port: 5432
      targetPort: 5432
  selector:
    app: promscale
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promscale-connector
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: promscale
  replicas: 1
  template:
    metadata:
      labels:
        app: promscale
    spec:
      containers:
        - name: promscale-connector
          imagePullPolicy: Always
          image: timescale/promscale:0.6.2
          args:
            - "-db-user=postgres"
            - "-db-host=$(PROMSCALE_DB_HOST)"
            - "-db-port=5432"
            - "-db-name=postgres"
            - "-db-password=1234"
            - "-db-ssl-mode=disable"
          ports:
            - containerPort: 9201
          env:
          - name: PROMSCALE_DB_PORT
            value: "5432"
          - name: PROMSCALE_LEADER_ELECTION_PG_ADVISORY_LOCK_ID
            value: "1"
          - name: PROMSCALE_LEADER_ELECTION_PG_ADVISORY_LOCK_PROMETHEUS_TIMEOUT
            value: 30s
          - name: PROMSCALE_LOG_LEVEL
            value: info
          - name: PROMSCALE_DB_HOST
            value: promscale.monitoring.svc
          - name: PROMSCALE_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
          - name: PROMSCALE_WEB_TELEMETRY_PATH
            value: "/metrics-text"
          - name: PROMSCALE_DB_SSL_MODE
            value: allow
          - name: POSTGRES_DB
            value: postgres
          - name: POSTGRES_DB_USER
            value: postgres
        - name: postgres
          image: timescale/timescaledb-ha:pg13.4-ts2.4-latest
          imagePullPolicy: "IfNotPresent"
          args: ["-c", "shared_buffers=256MB", "-c", "max_connections=1000"]
          ports:
            - containerPort: 5432
          env:
          - name: TZ
            value: 'Asia/Seoul'
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
          resources:
#            limits:
#              cpu: "500m"
#              memory: "4Gi"
            requests:
              cpu: "500m"
              memory: "4Gi"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgres-pv-claim
